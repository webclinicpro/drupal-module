<?php
/**
 * @file
 * Adds webClinic Pro security settings.
 * @company webClinic Pro <https://www.webclinicpro.com>
 * @author Jason D. Richmond <info@webclinicpro.com>
 * @created October 1st, 2015
 */


/**
 * Implements hoom_menu().
 */
function webclinicpro_menu() {
    $items['admin/config/system/webclinicpro'] = array(
        'title' => 'webClinic Pro',
        'description' => 'Security settings for webClinic Pro subscribers.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('webclinicpro_admin_settings'),
        'access arguments' => array('administer site configuration'),
        'type' => MENU_NORMAL_ITEM,
    );
    
    return $items;
}


/**
 * Implements hook_admin_settings().
 */
function webclinicpro_admin_settings() {

    $form['webclinicpro_subscriber_key'] = array(
        '#type' => 'textfield',
        '#title' => t('webClinic Pro Subscriber KEY'),
        '#default_value' => variable_get('webclinicpro_subscriber_key', NULL),
        '#description' => t('The webClinic Pro Subscriber KEY is found in the client administration section of the webClinic Pro website. The KEY is needed to authenticate use of this moduel.'),
    );
     
    $options = array('None', 'Style #1 - Black Text with Transparent Background', 'Style #2 - White Text with Transparent Background');
    $form['webclinicpro_block_seal'] = array(
        '#type' => 'radios',
        '#options' => $options,
        '#title' => t('Enable protection seal?'),
        '#default_value' => variable_get('webclinicpro_block_seal', 0),
        '#description' => t('The webClinic Pro Protection Seal appears at the bottom right on all pages of the website.'),
    );
    
    $form['webclinicpro_forced_ssl'] = array(
        '#type' => 'checkbox',
        '#title' => t('Force entire website to use SSL?'),
        '#default_value' => variable_get('webclinicpro_forced_ssl', TRUE),
        '#description' => t('This is often referred to as HTTPS Everywhere and is highly encouraged by Google for enhancing website protection.  <em>Don\'t use Flexible SSL or your website may become inoperable.</em>'),
    );
    
    $form['webclinicpro_cache'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enable website caching?'),
        '#default_value' => variable_get('webclinicpro_cache', TRUE),
        '#description' => t('This will cache html, JavaScript, and Cascading Style Sheets to speed delivery and reduce load on the web server.'),
    );
    
    $form['#submit'][] = 'webclinicpro_admin_settings_submit';
    return system_settings_form($form);
}


/**
 * Implementation of hook_admin_settings_submit().
 */
function webclinicpro_admin_settings_submit($form, &$form_state) {
    if (isset($_SERVER['HTTP_CF_CONNECTING_IP'])) {
        drupal_set_message(t('Web Application Firewall Enabled | ' . $_SERVER['REMOTE_ADDR']), 'status');
    } else {
        drupal_set_message(t('Web Application Firewall Disabled | ' . $_SERVER['REMOTE_ADDR']), 'status');
    }
}


/**
 * Implements hook_block_info().
 */
function webclinicpro_block_info() {
    $blocks['webclinicpro'] = array(
        'info' => t('webClinic Pro'),
    );
    
    return $blocks;
} 


/**
 * Implements hook_block_view().
 */
function webclinicpro_block_view($delta = '') {
    $block = array(); 
    
    switch ($delta) {
        case 'webclinicpro':
            $block['content'] = webclinicpro_block_contents();
            break;
    }
    
    return $block;    
}


function webclinicpro_page_alter(&$page) {
    
    if (variable_get('webclinicpro_block_seal') != 0) {
        $page['page_bottom']['my_extra_element'] = array(
            '#markup' => webclinicpro_footer(),
            '#weight' => 25,
        );
    }
    
}

/**
 * Custom function for retrieving code for seal.
 */
function webclinicpro_footer() {
    $block = array();
    
    $file = "https://www.webclinicpro.com/seal.php";
    if (function_exists('curl_version')) {
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $file);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS,
            "key=" . variable_get('webclinicpro_key'));
                    
        $content = curl_exec($curl);
        curl_close($curl);
    } else if (file_get_contents(__FILE__) && ini_get('allow_url_fopen')) {
        $content = file_get_contents($file);
    } else {
        //echo 'You have neither cUrl installed nor allow_url_fopen activated. Please setup one of those!';
    }

    return $content;
}


/**
 * Implements hook_init().
 */
function webclinicpro_init() {
    global $base_url, $is_https, $user;
    
    if (!$is_https && variable_get('webclinicpro_forced_ssl') == TRUE) {
        //webclinicpro_log('Switch User to secure', $path);
        webclinicpro_goto(TRUE);
    }

    // Correct the base_url so that everything comes from HTTPS.
    if ($is_https) {
        $base_url = webclinicpro_baseurl();
    }
    
    // Force use of correct Remote Address.
    if (isset($_SERVER['HTTP_CF_CONNECTING_IP'])) { 
        $_SERVER['REMOTE_ADDR'] = $_SERVER['HTTP_CF_CONNECTING_IP']; 
    }
    
}


/**
 * Redirects the current page to the secure or insecure version.
 *
 * @param $secure
 *   Determines which version of the set to move to.
 */
function webclinicpro_goto($secure) {

  $url['path'] = drupal_is_front_page() ? '' : $_GET['q'];
  $url['query'] = $_GET;
  unset($url['query']['q']);
  $url['https'] = $secure;
  $url['base_url'] = webclinicpro_baseurl($secure);
  $url['absolute'] = TRUE;
  $url['external'] = FALSE; // prevent an open redirect

  // Check for the overlay.  Attempting to switch protocols during an XHR
  // isn't allowed by the browser's same-origin policy, so we must close the overlay.
  if (module_exists('overlay') && overlay_get_mode() == 'child') {
    overlay_close_dialog($url['path'], $url);
  }
  elseif (isset($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest') {
    return;
  }
  else {
    // Setting the redirect headers manually allows them to be cached.
    drupal_add_http_header('Location', url($url['path'], $url));
    drupal_add_http_header('Status', '302 Found');
    print "302 Found";

    // Store the response in the page cache.
    if (variable_get('cache', 0) && ($cache = drupal_page_set_cache())) {
      drupal_serve_page_from_cache($cache);
    }
    else {
      ob_flush();
    }
    exit();
  }
}


/**
 * Returns the secure base path.
 */
function webclinicpro_baseurl($secure = TRUE) {
  global $base_url;

  //  Change base_url to https.
  return preg_replace('/http[s]?:\/\//i', ($secure ? 'https://' : 'http://'), $base_url, 1);
}



?>